- Verificar ciclo de vida das variaveis locais. Variaveis fora do escopo gera ERRO DE COMPILA��O.
- Cuidado com variaveis locais de loop for.
- Cuidado com escopo de parametros dos metodos, s� podem ser acessados durante a execu��o do metodo.
- Cuidado com variaveis no mesmo escopo com nomes iguais.
- Verificar nome de parametro com variavel local.
- Verificar se a estrutura da classe est� correta (Package -> Import -> Classes).
- Declara��o de variaveis sempre com TIPO + NOME.
- Declara��o de metodos sempre com TIPO DE RETORN + NOME + PARAMETROS (0 ou +).
- Para compilar a aplica��o usamos o javac e o diretorio usando /.
- Para rodar a aplica��o usamos o java e os diretorios usando o ., passando os parametros separados por <space>.
- Para escolher a vers�o de java que ser� compila usamos o -source <version>.
- Usamos o -D para passar propriedades para a JVM.
- Para gerar o jar, usamos o comando jar -cf e para criar o jar com manifesto jar -cfm
- Checar se a classe n�o tenta usar classes do pacote padr�o.
- Verificar moderadores de acesso dos metodos e contrutores.
- Verificar declara��o do import estatico.
- Verificar se as variaveis locais foram inicializadas antes de usar.
- Base octal, começa com 0 e aceita de 0 a 7. Base binaria começa com 0b e aceita somente 0 e 1. Base hexadecimal, começa com 0x e aceita de 0 a 9 e de A a F.
- Varargs sempre será o último parametro da assinatura do metodo e sempre será um por metodo.
- Varargs aceita um array do tipo mas não podemos chamar um metodo de array como se fosse varargs.
- Metodos do string builder que recebem start-end (substring, delete) nunca elimina o index final.
- String são imutaveis, ou seja, nenhum metodo altera uma string, somente devolve uma string nova.
- Verificar se metodo estatico não tenta acessar uma propriedade não estatica.
- Erro de execução ao tentar criar um objeto passando um parametro nulo.
- O tipo do resultado de uma operação é o tipo mais abrangente ou no minimo int.
- Somente String literais vão para o pool de Strings.
- Concatenacao de duas strings literais vão para o pool, se algum objeto não for literal gera-se um novo objeto.
- Metodos da classe String sempre gera um novo objeto, exceto se o metodo retornar exatamente a mesma string.
- else if é separado (não existe elseif)
- Checar moderador de acesso de todos os atributos de classe.
- Checar os if que não possuem chaves de delimitação. {}
- Checar se os cases do switch estão usando String, Int ou abaixo, Constantes.
- Checar se a estrutura do switch está de acordo.
- 
